import Screen from "../screenClass";
import { Chart } from "primereact/chart";
import { getRandomColor } from "../../../utils/stringHelper";
import { Card, Grid, Tab, TabGroup, TabList, TabPanel, TabPanels, Text, Title } from "@tremor/react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import Backend from "../../../utils/backend";
import Constants from "../../../utils/constants";
import store from "../../../store";
import { faHandshake, faIdCard, faChalkboardUser, faUsersBetweenLines, faPenRuler } from "@fortawesome/free-solid-svg-icons";
import ProjectSvg from "../../../images/svg/Projects.svg";
import TraninerSvg from "../../../images/svg/Trainers.svg";
import TranningSvg from "../../../images/svg/Training.svg";
import StudentsSvg from "../../../images/svg/Student.svg";
import StartupsSvg from "../../../images/svg/Startups.svg";
import InternsSvg from "../../../images/svg/Interns.svg";
import PartnerSvg from "../../../images/svg/Partners.svg";

const Dashboard = new Screen({
  screenId: "dashboard",

  contentHeader: "Dashboard",

  dataUrlDashboard: "/api/dashboard/GetDashboardData",

  actions: [
    {
      title: "Filter",
      type: "filter",
      handler: ({ changeModal, screenViewType }) => {
        var url;

        const inputs = [
          {
            type: "dropdown",
            id: "Project",
            label: "Project",
            required: false,
            optionsGetter: () => Constants.Projects,
            optionsGetter: async () => (await Backend.call("/api/dashboard/ProjectsDropdown")).ResponseData,
          },
        ];

        if (screenViewType === Constants.ScreenViewTypeTable) {
          url = Dashboard.dataUrl;
          inputs.push({ type: "dropdown", id: "Order", label: "Order", required: false, optionsGetter: () => Constants.AtmOrder });
        } else {
          url = Dashboard.dataUrlDashboard;
        }

        changeModal({
          title: "Dashboard Filter",
          inputs,
          buttonText: "Dashboard Filter",
          width: "20vw",
          onSubmit: async (formData, getData) => {
            store.dispatch({
              type: "formFilters/set",
              payload: { screenId: Dashboard.screenId, data: formData },
            });
            await getData(url, formData);
          },
        });
      },
    },
  ],

  dashboard: (data, TYPE) => {
    return (
      <div className="h-screen fade-in text-gray-500 pl-2" style={{ backgroundColor: "#f3f6ff" }}>
        <main className="pr-5 pb-40">
          <Grid numItemsMd={1} numItemsLg={3} className="gap-6">
            {data
              .filter((e) => e.TYPE === "Total Training")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="lg:col-span-2 h-[13rem]">
                      <p size="2xl" className="font-bold">
                        Trainings per month
                      </p>
                      <Chart
                        type="line"
                        height="10rem"
                        options={{
                          responsive: true,
                          plugins: {
                            legend: {
                              position: "left",
                            },
                          },
                          indexAxis: "x",
                          maintainAspectRatio: false,
                          cubicInterpolationMode: "monotone",
                        }}
                        data={{
                          labels: data
                            .filter((e) => e.TYPE === "Statistics")
                            .sort((a, b) => a.KEY.localeCompare(b.KEY))
                            .map((e) => e.KEY),

                          datasets: [
                            {
                              label: "Course",
                              borderColor: "#E26600",
                              backgroundColor: "#E26600",
                              data: data
                                .filter((e) => e.TYPE === "Statistics")
                                .sort((a, b) => a.KEY.localeCompare(b.KEY))
                                .map((e) => e.VALUE),
                            },
                            {
                              label: "Sessions",
                              borderColor: "#202020",
                              backgroundColor: "#202020",
                              data: data
                                .filter((e) => e.TYPE === "Statistics")
                                .sort((a, b) => a.KEY3.localeCompare(b.KEY3))
                                .map((e) => e.VALUE3),
                            },
                            {
                              label: "Workshops",
                              borderColor: "grey",
                              backgroundColor: "grey",
                              data: data
                                .filter((e) => e.TYPE === "Statistics")
                                .sort((a, b) => a.KEY2.localeCompare(b.KEY2))
                                .map((e) => e.VALUE2),
                            },
                          ],
                        }}
                      />
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Total Training")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center space-x-4">
                      {data
                        .filter((e) => e.TYPE === "Number of Courses")
                        .map(
                          (e) =>
                            e.VALUE !== 0 && (
                              <div>
                                <p className="text-center text-xl font-bold text-[#eb944d]">
                                  {data
                                    .filter((e) => e.TYPE === "Number of Courses")
                                    .map((e) => (
                                      <p className="p_card">{e.VALUE}</p>
                                    ))}
                                </p>
                                <p className="text-center ">Total Courses</p>
                              </div>
                            )
                        )}
                      {data
                        .filter((e) => e.TYPE === "Total Sessions")
                        .map(
                          (e) =>
                            e.VALUE !== 0 && (
                              <div>
                                <p className="text-center text-xl font-bold text-[#E26600]">
                                  {data
                                    .filter((e) => e.TYPE === "Total Sessions")
                                    .map((e) => (
                                      <p className="p_card">{e.VALUE}</p>
                                    ))}
                                </p>
                                <p className="text-center">Total Sessions</p>
                              </div>
                            )
                        )}
                      {data
                        .filter((e) => e.TYPE === "Number of Workshops")
                        .map(
                          (e) =>
                            e.VALUE !== 0 && (
                              <div>
                                <p className="text-center text-xl font-bold text-[#E26600]">
                                  {data
                                    .filter((e) => e.TYPE === "Number of Workshops")
                                    .map((e) => (
                                      <p className="p_card">{e.VALUE}</p>
                                    ))}
                                </p>
                                <p className="text-center">Total Workshops</p>
                              </div>
                            )
                        )}
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Gender")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="col-span-1 h-[13rem]">
                      <p size="2xl" className="font-bold">
                        Genders
                      </p>
                      <Chart
                        type="pie"
                        height="9rem"
                        data={{
                          labels: [
                            `Male ${data.filter((e) => e.TYPE === "Gender" && e.KEY === "Male").reduce((acc, r) => r.VALUE, 0)}%`,
                            `Female ${data.filter((e) => e.TYPE === "Gender" && e.KEY2 === "Female").reduce((acc, r) => r.VALUE2, 0)}%`,
                          ],
                          datasets: [
                            {
                              label: "Gender",
                              backgroundColor: ["#E26600", "#202020"],
                              data: [
                                data.filter((e) => e.TYPE === "Gender" && e.KEY === "Male").reduce((acc, r) => r.VALUE, 0),
                                data.filter((e) => e.TYPE === "Gender" && e.KEY2 === "Female").reduce((acc, r) => r.VALUE2, 0),
                              ],
                            },
                          ],
                        }}
                        options={{
                          responsive: true,
                          plugins: {
                            legend: {
                              position: "right",
                            },
                          },
                          maintainAspectRatio: false,
                        }}
                      />
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Age Range")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="lg:col-span-2 h-[13rem]">
                      <p size="2xl" className="font-bold">
                        Age Range
                      </p>
                      <Chart
                        type="bar"
                        height="10rem"
                        data={{
                          labels: data
                            .filter((e) => e.TYPE === "Age Range")
                            .sort((a, b) => a.TYPE.localeCompare(b.TYPE))
                            .map((e) => e.TYPE),

                          datasets: [
                            {
                              label: "Percentage of 15-19",
                              backgroundColor: "#202020",
                              data: data
                                .filter((e) => e.TYPE === "Age Range")
                                .sort((a, b) => a.KEY.localeCompare(b.KEY))
                                .map((e) => e.VALUE),
                            },
                            {
                              label: "Percentage of 19-25",
                              backgroundColor: "#202020",
                              data: data
                                .filter((e) => e.TYPE === "Age Range")
                                .sort((a, b) => a.KEY3.localeCompare(b.KEY3))
                                .map((e) => e.VALUE3),
                            },
                            {
                              label: "Percentage of 25-35",
                              backgroundColor: "#202020",
                              data: data
                                .filter((e) => e.TYPE === "Age Range")
                                .sort((a, b) => a.KEY2.localeCompare(b.KEY2))
                                .map((e) => e.VALUE2),
                            },
                          ],
                        }}
                        options={{
                          responsive: true,
                          plugins: {
                            legend: {
                              position: "left",
                              title: "Age %",
                            },
                          },
                          indexAxis: "x",
                          maintainAspectRatio: false,
                        }}
                      />
                    </Card>
                  )
              )}
            {/* {data
              .filter((e) => e.TYPE === "Number of Courses")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" x="0px" y="0px" className="w-28 h-28 fill-[#eb944d]" style={{ color: "red" }}>
                        <title>30</title>
                        <path d="M28.21289,8.4256a9.44824,9.44824,0,1,1-9.44824,9.44824A9.44829,9.44829,0,0,1,28.21289,8.4256ZM7.76636,57.00006h7.97729l-3.16211-6.55194,3.21009-6.64789,1.06579-2.20642V57.00006h22.7107V40.21631a3.1799,3.1799,0,0,1,.22753.242l.83838,1.138,5.36621,7.2826a3.59271,3.59271,0,0,0,5.3302.51513L63.04492,38.63763a3.59436,3.59436,0,1,0-4.863-5.29419l-8.76794,8.0492-3.83289-5.19843a10.495,10.495,0,0,0-8.40869-4.25207H20.09167A10.48332,10.48332,0,0,0,10.689,37.85919L5.35876,48.89093a3.57976,3.57976,0,0,0,0,3.1264ZM4.99963,93.36169c0,2.18445,27.197,2.18445,27.197,0,0-6.23211-6.088-11.28509-13.599-11.28509S4.99963,87.12958,4.99963,93.36169ZM93.99976,4.99994H50.36108v4H90.99976v42H68.74414v4H93.99976a1,1,0,0,0,1-1v-48A1,1,0,0,0,93.99976,4.99994ZM24.93555,73.617a6.33741,6.33741,0,1,0-6.33741,6.33747A6.33748,6.33748,0,0,0,24.93555,73.617Zm42.8667,19.74469c0,2.18445,27.197,2.18445,27.197,0,0-6.23217-6.087-11.28509-13.59815-11.28509S67.80225,87.12952,67.80225,93.36169ZM87.73816,73.617a6.33747,6.33747,0,1,0-6.33753,6.33747A6.33743,6.33743,0,0,0,87.73816,73.617ZM63.5979,93.36169C63.5979,87.12952,57.511,82.0766,50,82.0766S36.40088,87.12952,36.40088,93.36169C36.40088,95.54614,63.5979,95.54614,63.5979,93.36169ZM43.662,73.617a6.33746,6.33746,0,1,0,6.33752-6.33746A6.33743,6.33743,0,0,0,43.662,73.617Z" />
                      </svg>
                      <div>
                        <p className="text-center">Number of Courses</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of Courses")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )} */}
            {data
              .filter((e) => e.TYPE === "Total Projects")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[12rem] flex justify-around items-center ">
                      <img src={ProjectSvg} className="w-28 h-28 fill-[#eb944d]" />
                      <div>
                        <p className="text-center">Number of Projects</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Total Projects")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Number of Trainers")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      {/* <FontAwesomeIcon icon={faChalkboardUser} color="#eb944d" style={{ height: "6em", width: "6em" }} /> */}
                      <img src={TraninerSvg} className="w-25 h-24 fill-[#eb944d]" style={{ height: "6em", width: "6em" }} />
                      {/* <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" className="w-28 h-28 fill-[#eb944d]" x="0px" y="0px">
                        <path d="m93.52,67.53h-3.17V14.45h2.93c.72,0,1.3-.58,1.3-1.3v-7.46c0-.72-.58-1.3-1.3-1.3H1.48c-.72,0-1.3.58-1.3,1.3v7.46c0,.72.58,1.3,1.3,1.3h2.93v53.08H1.73c-.72,0-1.3.58-1.3,1.3v7.46c0,.72.58,1.3,1.3,1.3h13.09v11.73c0,.72.58,1.3,1.3,1.3h28.44c.72,0,1.3-.58,1.3-1.3v-11.73h47.66c.72,0,1.3-.58,1.3-1.3v-7.46c0-.72-.58-1.3-1.3-1.3ZM2.78,6.99h89.19v4.86H2.78v-4.86Zm4.23,7.46h80.74v53.08h-41.89v-5.62c0-4.5-3.66-8.15-8.15-8.15h-14.74c-4.5,0-8.15,3.66-8.15,8.15v5.62h-7.81V14.45Zm-3.98,60.54v-4.86h11.79v4.86H3.03Zm40.23,13.03h-25.85v-26.11c0-3.06,2.49-5.55,5.55-5.55h14.74c3.06,0,5.55,2.49,5.55,5.55v26.11Zm48.96-13.03h-46.36v-4.86h46.36v4.86Zm-61.88-22.39c6.34,0,11.5-5.16,11.5-11.5s-5.16-11.5-11.5-11.5-11.5,5.16-11.5,11.5,5.16,11.5,11.5,11.5Zm0-20.39c4.91,0,8.9,3.99,8.9,8.9s-3.99,8.9-8.9,8.9-8.9-3.99-8.9-8.9,3.99-8.9,8.9-8.9Zm15.13,5.98h6.19v4.4c0,.53.33,1.01.82,1.21.15.06.32.09.48.09.35,0,.7-.14.95-.41l4.93-5.29h20.6c1.74,0,3.1-1.09,3.1-2.49v-16.79c0-1.39-1.36-2.49-3.1-2.49h-33.96c-1.74,0-3.09,1.09-3.09,2.49v16.79c0,1.39,1.36,2.49,3.09,2.49Zm-.5-19.06c.1-.05.27-.1.5-.1h33.96c.23,0,.4.05.5.1v16.36c-.1.05-.27.1-.5.1h-21.16c-.36,0-.7.15-.95.41l-3.06,3.29v-2.4c0-.72-.58-1.3-1.3-1.3h-7.49c-.23,0-.4-.05-.5-.1v-16.36Zm3.96,11.53c0-.72.58-1.3,1.3-1.3h24.44c.72,0,1.3.58,1.3,1.3s-.58,1.3-1.3,1.3h-24.44c-.72,0-1.3-.58-1.3-1.3Zm0-6.72c0-.72.58-1.3,1.3-1.3h24.44c.72,0,1.3.58,1.3,1.3s-.58,1.3-1.3,1.3h-24.44c-.72,0-1.3-.58-1.3-1.3Z" />
                      </svg> */}
                      <div>
                        <p className="text-center">Number of Trainers</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of Trainers")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {/* {data
              .filter((e) => e.TYPE === "Total Sessions")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <FontAwesomeIcon
                        icon={faUsersBetweenLines}
                        className="w-25 h-24 fill-[#eb944d]"
                        color="#eb944d"
                        style={{ height: "6em", width: "6em" }}
                      />

                      {/* <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" className="w-28 h-28 fill-[#eb944d]" x="0px" y="0px">
                        <path d="M95,37.49872v5.00189a9.45314,9.45314,0,0,0,9.38379,9.499h1.23242A9.45314,9.45314,0,0,0,115,42.50061V37.49872a9.45318,9.45318,0,0,0-9.38379-9.499h-1.23242A9.45318,9.45318,0,0,0,95,37.49872Zm16,0v5.00189a5.44838,5.44838,0,0,1-5.38379,5.499h-1.23242A5.44838,5.44838,0,0,1,99,42.50061V37.49872a5.44832,5.44832,0,0,1,5.38379-5.499h1.23242A5.44832,5.44832,0,0,1,111,37.49872Z" />
                        <path d="M126,64.99951a2.00009,2.00009,0,0,0-2,1.99994v40.99969a4.004,4.004,0,0,1-4,4H90a2,2,0,1,0,0,3.99994h5.69128L92.18262,125.293a1.99988,1.99988,0,1,0,3.74219,1.41211l4.04181-10.706H115.0871l4.04181,10.706a1.99988,1.99988,0,0,0,3.74219-1.41211l-3.50867-9.29388H120a8.00911,8.00911,0,0,0,8-7.99994V66.99945A2.00009,2.00009,0,0,0,126,64.99951Z" />
                        <path d="M114.26758,108.49915a6.00651,6.00651,0,0,0,6-5.99994V66.66937a10.0978,10.0978,0,0,0-10-10.1698h-10a10.0978,10.0978,0,0,0-10,10.1698V78.6192l4-5.29639V66.66937a6.09335,6.09335,0,0,1,6-6.16986h10a6.09335,6.09335,0,0,1,6,6.16986v35.82983a2.00261,2.00261,0,0,1-2,2h-27a2.00037,2.00037,0,0,0-1.51172.69043L74.041,118.70612a2.29578,2.29578,0,0,1-1.73633.793,2.29871,2.29871,0,0,1-1.91113-3.57422L84.0332,95.49927h1.585a11.07925,11.07925,0,0,1-1.24835-4h-1.406a2.00032,2.00032,0,0,0-1.66309.88965L67.06641,113.70422a6.29809,6.29809,0,0,0,9.998,7.621l11.11621-12.82611Z" />
                        <path d="M103.98438,73.72894a1.99962,1.99962,0,1,0-3.19141-2.41016L89.77637,85.90656A7.1874,7.1874,0,0,0,101.085,94.77661l9.00586-11.08295a2,2,0,0,0-3.10352-2.52338L97.98145,92.25415a3.18772,3.18772,0,0,1-5.01465-3.93549Z" />
                        <path d="M22.38379,27.99976A9.45318,9.45318,0,0,0,13,37.49872v5.00189a9.45314,9.45314,0,0,0,9.38379,9.499h1.23242A9.45314,9.45314,0,0,0,33,42.50061V37.49872a9.45318,9.45318,0,0,0-9.38379-9.499ZM29,37.49872v5.00189a5.44838,5.44838,0,0,1-5.38379,5.499H22.38379A5.44838,5.44838,0,0,1,17,42.50061V37.49872a5.44832,5.44832,0,0,1,5.38379-5.499h1.23242A5.44832,5.44832,0,0,1,29,37.49872Z" />
                        <path d="M88.71973,48.67346a11.91992,11.91992,0,0,0-6.9248-9.27435L73,35.40576V34.19293a11.80319,11.80319,0,0,0,3-7.94318V19.74982A11.55094,11.55094,0,0,0,64.40039,7.99994h-.80078A11.55094,11.55094,0,0,0,52,19.74982v6.49994a11.80319,11.80319,0,0,0,3,7.94318v1.21332l-8.79395,3.99286a11.919,11.919,0,0,0-6.92578,9.27435l-1.58179,8.068a14.21,14.21,0,0,1,3.04364,4.722,1.98382,1.98382,0,0,0,.22076-.57916l2.25391-11.4989c.00781-.04.01465-.08105.01953-.12109a7.94422,7.94422,0,0,1,4.623-6.22266L55,39.79938v.70032a2.001,2.001,0,0,0,.49512,1.31738l4.88239,5.57983L57.07617,58.98877a2.00291,2.00291,0,0,0,.51465,1.96777l5,4.96289a2.00184,2.00184,0,0,0,2.81836,0l5-4.96289a2.00291,2.00291,0,0,0,.51465-1.96777L67.6225,47.39691l4.88239-5.57983A2.001,2.001,0,0,0,73,40.49969v-.70026l7.1416,3.24219a7.94512,7.94512,0,0,1,4.62207,6.22266c.00488.04.01172.08105.01953.12109l2.25391,11.4989a1.989,1.989,0,0,0,.21881.58435,14.21078,14.21078,0,0,1,3.04559-4.72717ZM64,61.68115l-2.75293-2.73242,2.41644-8.48535a1.58222,1.58222,0,0,0,.673,0l2.41644,8.48535Zm5-21.93341-4.21747,4.82037c-.0144.00372-.02887.0036-.04327.00769A1.99482,1.99482,0,0,0,64,44.96838a1.99482,1.99482,0,0,0-.73926-.39258c-.0144-.00409-.02887-.00391-.04327-.00763L59,39.74774v-2.678a11.68934,11.68934,0,0,0,4.59961.93h.80078A11.68934,11.68934,0,0,0,69,37.0697Zm3-13.498a7.59414,7.59414,0,0,1-7.59961,7.75h-.80078A7.59414,7.59414,0,0,1,56,26.24976V19.74982a7.59412,7.59412,0,0,1,7.59961-7.74994h.80078A7.59412,7.59412,0,0,1,72,19.74982Z" />
                        <rect x="41.73242" y="71.99945" width="44.53516" height="3.99994" />
                        <path d="M99,0H29a6.00651,6.00651,0,0,0-6,5.99994V23.99982h.61621A13.21027,13.21027,0,0,1,27,24.45392V5.99994a2.00261,2.00261,0,0,1,2-2H99a2.00261,2.00261,0,0,1,2,2v18.454a13.21027,13.21027,0,0,1,3.38379-.4541H105V5.99994A6.00651,6.00651,0,0,0,99,0Z" />
                        <path d="M38,111.99915H8a4.004,4.004,0,0,1-4-4V66.99945a2,2,0,0,0-4,0v40.99969a8.00911,8.00911,0,0,0,8,7.99994h.63757L5.12891,125.293a1.99988,1.99988,0,1,0,3.74219,1.41211l4.04181-10.706H28.03339l4.04181,10.706a1.99988,1.99988,0,1,0,3.74219-1.41211l-3.50867-9.29388H38a2,2,0,1,0,0-3.99994Z" />
                        <path d="M46.69922,92.38892a2.00032,2.00032,0,0,0-1.66309-.88965H43.63031a11.07955,11.07955,0,0,1-1.24854,4h1.585l13.63867,20.4256a2.29794,2.29794,0,0,1-1.91016,3.57422,2.29578,2.29578,0,0,1-1.73633-.793L42.24414,105.18964a2.00043,2.00043,0,0,0-1.51172-.69043h-27a2.00261,2.00261,0,0,1-2-2V66.66937a6.09335,6.09335,0,0,1,6-6.16986h10a6.09335,6.09335,0,0,1,6,6.16986v6.6535l4,5.29675V66.66937a10.0978,10.0978,0,0,0-10-10.1698h-10a10.0978,10.0978,0,0,0-10,10.1698v35.82983a6.00651,6.00651,0,0,0,6,5.99994H39.81934l11.11621,12.82611a6.29768,6.29768,0,0,0,9.99707-7.621Z" />
                        <path d="M34.47852,92.73853a3.19832,3.19832,0,0,1-4.46-.48535L21.0127,81.17029a2,2,0,0,0-3.10352,2.52338l9.00586,11.082a7.18668,7.18668,0,0,0,11.30957-8.86713L27.207,71.31879a1.99962,1.99962,0,0,0-3.19141,2.41016L35.03418,88.32062A3.16976,3.16976,0,0,1,34.47852,92.73853Z" />
                      </svg> 
                      <div>
                        <p className="text-center">Number of Sessions</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Total Sessions")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )} */}
            {data
              .filter((e) => e.TYPE === "Number of Students")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <img src={StudentsSvg} className="w-28 h-28 fill-[#eb944d]" />

                      {/* <svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" className="w-28 h-28 fill-[#eb944d]">
                        <g>
                          <path d="M34.74,74.16c-1.23-1.91-3.37-3.18-5.82-3.18H11.95C8.11,70.98,5,74.09,5,77.93v2c0,1.17,0.95,2.12,2.11,2.12h22.64   c0.48,0,0.88-0.34,1.01-0.8c0.64-2.25,1.97-4.21,3.74-5.64C34.95,75.25,35.05,74.64,34.74,74.16z" />
                          <path d="M88.05,70.98H71.08c-2.45,0-4.59,1.27-5.82,3.18c-0.31,0.48-0.21,1.09,0.24,1.45c1.77,1.43,3.1,3.39,3.74,5.64   c0.13,0.46,0.53,0.8,1.01,0.8h22.64c1.16,0,2.11-0.95,2.11-2.12v-2C95,74.09,91.89,70.98,88.05,70.98z" />
                          <path d="M18.29,45.61c2.34-0.42,4.9-0.2,7.57,1.09c3.11,1.5,5.59,4.19,6.67,7.47c0.79,2.42,0.81,4.74,0.31,6.87   c-0.15,0.65,0.36,1.26,1.03,1.26h2.75c0.49,0,0.89-0.35,1.01-0.82c1.36-5.58,6.38-9.73,12.37-9.73s11.01,4.15,12.37,9.73   c0.12,0.47,0.51,0.82,1.3,0.82h2.46c0.67,0,1.18-0.61,1.03-1.26c-0.51-2.17-0.48-4.55,0.36-7.02c0.88-2.57,2.67-4.78,4.93-6.29   c3.21-2.14,6.2-2.58,8.93-2.17c0.63,0.09,1.19-0.41,1.19-1.05V15.84c0-2.33-1.89-4.22-4.23-4.22H21.32c-2.33,0-4.22,1.89-4.22,4.22   v28.73C17.1,45.21,17.66,45.72,18.29,45.61z M51.06,25.75h14.78c1.46,0,2.64,1.18,2.64,2.64c0,1.46-1.18,2.64-2.64,2.64H51.06   c-1.46,0-2.64-1.18-2.64-2.64C48.42,26.93,49.6,25.75,51.06,25.75z M38.11,18.95c3.56,0,6.44,2.88,6.44,6.44   c0,3.56-2.88,6.45-6.44,6.45s-6.44-2.89-6.44-6.45C31.67,21.83,34.55,18.95,38.11,18.95z M32.05,36.31h33.79   c1.46,0,2.64,1.18,2.64,2.64c0,1.46-1.18,2.64-2.64,2.64H32.05c-1.46,0-2.64-1.18-2.64-2.64C29.41,37.49,30.59,36.31,32.05,36.31z" />
                          <path d="M20.43,66.68c4.71,0,8.53-3.81,8.53-8.52c0-4.7-3.82-8.52-8.53-8.52c-4.7,0-8.52,3.82-8.52,8.52   C11.91,62.87,15.73,66.68,20.43,66.68z" />
                          <path d="M71.04,58.16c0,4.71,3.82,8.52,8.53,8.52c4.7,0,8.52-3.81,8.52-8.52c0-4.7-3.82-8.52-8.52-8.52   C74.86,49.64,71.04,53.46,71.04,58.16z" />
                          <ellipse transform="matrix(0.9871 -0.1602 0.1602 0.9871 -9.6861 8.842)" cx="50" cy="64.5" rx="8.52" ry="8.52" />
                          <path d="M58.49,77.32H41.51c-3.83,0-6.94,3.11-6.94,6.94v2.01c0,1.17,0.94,2.11,2.11,2.11h26.64c1.17,0,2.11-0.94,2.11-2.11v-2.01   C65.43,80.43,62.32,77.32,58.49,77.32z" />
                        </g>
                      </svg> */}
                      <div>
                        <p className="text-center">Number of Students</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of Students")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Number of New Students")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <img src={StudentsSvg} className="w-28 h-28 fill-[#eb944d]" />
                      {/* <svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" className="w-28 h-28 fill-[#eb944d]">
                        <g>
                          <path d="M34.74,74.16c-1.23-1.91-3.37-3.18-5.82-3.18H11.95C8.11,70.98,5,74.09,5,77.93v2c0,1.17,0.95,2.12,2.11,2.12h22.64   c0.48,0,0.88-0.34,1.01-0.8c0.64-2.25,1.97-4.21,3.74-5.64C34.95,75.25,35.05,74.64,34.74,74.16z" />
                          <path d="M88.05,70.98H71.08c-2.45,0-4.59,1.27-5.82,3.18c-0.31,0.48-0.21,1.09,0.24,1.45c1.77,1.43,3.1,3.39,3.74,5.64   c0.13,0.46,0.53,0.8,1.01,0.8h22.64c1.16,0,2.11-0.95,2.11-2.12v-2C95,74.09,91.89,70.98,88.05,70.98z" />
                          <path d="M18.29,45.61c2.34-0.42,4.9-0.2,7.57,1.09c3.11,1.5,5.59,4.19,6.67,7.47c0.79,2.42,0.81,4.74,0.31,6.87   c-0.15,0.65,0.36,1.26,1.03,1.26h2.75c0.49,0,0.89-0.35,1.01-0.82c1.36-5.58,6.38-9.73,12.37-9.73s11.01,4.15,12.37,9.73   c0.12,0.47,0.51,0.82,1.3,0.82h2.46c0.67,0,1.18-0.61,1.03-1.26c-0.51-2.17-0.48-4.55,0.36-7.02c0.88-2.57,2.67-4.78,4.93-6.29   c3.21-2.14,6.2-2.58,8.93-2.17c0.63,0.09,1.19-0.41,1.19-1.05V15.84c0-2.33-1.89-4.22-4.23-4.22H21.32c-2.33,0-4.22,1.89-4.22,4.22   v28.73C17.1,45.21,17.66,45.72,18.29,45.61z M51.06,25.75h14.78c1.46,0,2.64,1.18,2.64,2.64c0,1.46-1.18,2.64-2.64,2.64H51.06   c-1.46,0-2.64-1.18-2.64-2.64C48.42,26.93,49.6,25.75,51.06,25.75z M38.11,18.95c3.56,0,6.44,2.88,6.44,6.44   c0,3.56-2.88,6.45-6.44,6.45s-6.44-2.89-6.44-6.45C31.67,21.83,34.55,18.95,38.11,18.95z M32.05,36.31h33.79   c1.46,0,2.64,1.18,2.64,2.64c0,1.46-1.18,2.64-2.64,2.64H32.05c-1.46,0-2.64-1.18-2.64-2.64C29.41,37.49,30.59,36.31,32.05,36.31z" />
                          <path d="M20.43,66.68c4.71,0,8.53-3.81,8.53-8.52c0-4.7-3.82-8.52-8.53-8.52c-4.7,0-8.52,3.82-8.52,8.52   C11.91,62.87,15.73,66.68,20.43,66.68z" />
                          <path d="M71.04,58.16c0,4.71,3.82,8.52,8.53,8.52c4.7,0,8.52-3.81,8.52-8.52c0-4.7-3.82-8.52-8.52-8.52   C74.86,49.64,71.04,53.46,71.04,58.16z" />
                          <ellipse transform="matrix(0.9871 -0.1602 0.1602 0.9871 -9.6861 8.842)" cx="50" cy="64.5" rx="8.52" ry="8.52" />
                          <path d="M58.49,77.32H41.51c-3.83,0-6.94,3.11-6.94,6.94v2.01c0,1.17,0.94,2.11,2.11,2.11h26.64c1.17,0,2.11-0.94,2.11-2.11v-2.01   C65.43,80.43,62.32,77.32,58.49,77.32z" />
                        </g>
                      </svg> */}
                      <div>
                        <p className="text-center">Number of new students</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of New Students")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {/* {data
              .filter((e) => e.TYPE === "Number of Workshops")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <FontAwesomeIcon icon={faPenRuler} className="w-25 h-24 fill-[#eb944d]" color="#eb944d" style={{ height: "4em", width: "4em" }} />
                      {/* <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" viewBox="0 0 512 640" x="0px" y="0px" className="w-28 h-28 fill-[#eb944d]">
                        <title>Scale</title>
                        <path d="M445.8,121.976a5.993,5.993,0,0,0-.852-1.072L380.225,56.179a6,6,0,0,0-8.486,0L358.988,68.93C323.3,35.469,302.826,44.3,300.529,45.462A6,6,0,0,0,299,55.057l36.932,36.932-11.416,11.416L286.771,65.662a6,6,0,0,0-10,2.574c-.27.931-5.991,21.744,12.585,44.007l-20.089,20.088-9.367-9.368a6,6,0,0,0-8.485,0l-19.673,19.672a6,6,0,0,0,0,8.486l9.368,9.367-7.784,7.784a6,6,0,0,0,0,8.485l8.921,8.921L21.758,406.162a6,6,0,0,0,0,8.485l52,52a6,6,0,0,0,8.484,0L302.722,246.159l8.487,8.487a6,6,0,0,0,8.485,0l38.852-38.852,68.7,42.773a6,6,0,0,0,7.413-.85L452.5,239.875a6,6,0,0,0,0-8.486l-67.5-67.5,11.415-11.416,67.505,67.5a6,6,0,0,0,8.485,0l17.842-17.843a6,6,0,0,0,.851-7.414Zm-143.933-5.282a6,6,0,0,0,.046-8.44c-8.642-8.828-12.192-17.374-13.518-24l38.02,38.02-65.3,65.3-15.065-15.066Zm-46.217,19,5.125,5.125L249.59,152l-5.125-5.125Zm184.119,99.941-10.23,10.23-68.7-42.773a6,6,0,0,0-7.413.85l-37.979,37.979-15.065-15.066,65.3-65.3Zm28.387-28.386-66.7-66.7c-1.182-1.181-3.642-3.64-7.345-2.106a6.021,6.021,0,0,0-1.947,1.3L376.51,155.4l-6.578-6.579a6,6,0,0,0-8.485,0l-73.788,73.788a6,6,0,0,0,0,8.486l6.579,6.579L261.081,270.83,250.6,260.353a6,6,0,0,0-8.487,8.485L252.6,279.316l-8.169,8.169-22.145-22.144a6,6,0,1,0-8.484,8.486l22.144,22.143-8.17,8.17-10.477-10.478a6,6,0,0,0-8.486,8.485l10.477,10.479-8.169,8.169-22.144-22.144a6,6,0,1,0-8.485,8.485l22.144,22.144-8.169,8.169-10.478-10.477a6,6,0,0,0-8.486,8.485l10.478,10.478-8.17,8.17-22.144-22.144a6,6,0,0,0-8.484,8.485l22.143,22.144-8.17,8.17-10.478-10.478a6,6,0,0,0-8.485,8.485l10.479,10.478-8.17,8.169-22.143-22.143a6,6,0,0,0-8.487,8.485L136.011,395.9l-8.169,8.169-10.479-10.478a6,6,0,1,0-8.484,8.486l10.478,10.477-8.17,8.17L89.044,398.58a6,6,0,0,0-8.486,8.485L102.7,429.21l-8.169,8.169L84.054,426.9a6,6,0,1,0-8.485,8.485l10.478,10.478L78,453.915,34.485,410.4,250.726,194.163l6.145,6.146a6,6,0,0,0,8.485,0l73.789-73.788a6,6,0,0,0,0-8.486L333,111.89l15.658-15.659a6,6,0,0,0,0-8.485L317.581,56.668c8.231,2.159,20.708,8.4,37.232,24.923a6,6,0,0,0,8.486,0l12.683-12.684,60,60,42.41,68.112Z" />
                      </svg> 
                      <div>
                        <p className="text-center">Number of Workshops</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of Workshops")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )} */}
            {data
              .filter((e) => e.TYPE === "Number of Interns")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <img src={InternsSvg} className="w-28 h-28 fill-[#eb944d]" />

                      {/* <svg
                        xmlns="http://www.w3.org/2000/svg"
                        version="1.1"
                        x="0px"
                        y="0px"
                        viewBox="0 0 263.739 331.92625"
                        className="w-28 h-28 fill-[#eb944d]"
                      >
                        <g>
                          <path d="M40.386,134.548h4.635v81.864c1.573-2.242,3.287-4.239,5.148-5.988c6.96-6.541,14.013-7.743,17.683-7.864   c0.305-0.021,0.56-0.032,0.818-0.032h1.08v-0.319c-6.266-5.232-10.261-13.097-10.261-21.879s3.995-16.647,10.261-21.879v-31.63   V107.88V93.041h2.659v50.807c1.026-0.907,1.846-2.074,2.306-3.469c12.844-38.951,14.121-65.938,3.796-80.215   c-5.124-7.085-11.45-8.88-14.925-9.307c-0.505-0.104-1.029-0.159-1.565-0.159H23.386c-0.535,0-1.058,0.055-1.563,0.158   c-3.474,0.427-9.804,2.221-14.93,9.308c-10.325,14.276-9.047,41.264,3.796,80.214c0.46,1.395,1.28,2.562,2.306,3.469V93.041h2.661   v14.839v18.939v35.221v62.779c0,6.83,5.537,12.363,12.363,12.363c3.678,0,6.972-1.615,9.238-4.164   c0.921-3.007,1.963-5.797,3.128-8.371V134.548z M46.957,74.874h16.25v4h-16.25V74.874z" />
                          <circle cx="42.703" cy="22.5" r="22.5" />
                          <path d="M104.825,93.041v14.839v18.939v30.533c7.066,5.192,11.664,13.556,11.664,22.976c0,8.964-4.164,16.97-10.655,22.198h1.471   c0.269,0,0.533,0.014,0.796,0.031c3.681,0.117,10.734,1.316,17.705,7.865c1.322,1.243,2.57,2.612,3.747,4.103v-79.979h4.635v87.208   c1.986,3.802,3.668,8.136,5.049,13.014c2.05,1.51,4.574,2.412,7.315,2.412c6.828,0,12.365-5.533,12.365-12.363v-62.779v-35.221   V107.88V93.041h2.659v50.807c1.026-0.907,1.846-2.074,2.306-3.468c12.844-38.951,14.121-65.938,3.797-80.215   c-5.124-7.085-11.45-8.88-14.925-9.307c-0.505-0.104-1.029-0.159-1.565-0.159h-38.635c-0.535,0-1.058,0.055-1.562,0.158   c-3.474,0.426-9.804,2.22-14.93,9.308c-10.325,14.276-9.047,41.264,3.796,80.215c0.46,1.395,1.279,2.561,2.306,3.469V93.041   H104.825z M136.124,74.874h16.25v4h-16.25V74.874z" />
                          <circle cx="131.87" cy="22.5" r="22.5" />
                          <path d="M191.33,143.848V93.041h2.661v14.839v18.939v35.221v62.779c0,6.83,5.537,12.363,12.363,12.363   c6.828,0,12.365-5.533,12.365-12.363v-90.271h4.635v90.271c0,6.83,5.537,12.363,12.363,12.363c6.828,0,12.365-5.533,12.365-12.363   v-62.779v-35.221V107.88V93.041h2.659v50.807c1.027-0.907,1.846-2.074,2.306-3.469c12.844-38.951,14.121-65.938,3.797-80.215   c-5.124-7.085-11.451-8.88-14.926-9.307c-0.505-0.104-1.029-0.159-1.565-0.159H201.72c-0.535,0-1.058,0.055-1.562,0.158   c-3.474,0.426-9.804,2.22-14.93,9.308c-10.324,14.276-9.047,41.264,3.797,80.215C189.484,141.774,190.304,142.941,191.33,143.848z    M225.29,74.874h16.25v4h-16.25V74.874z" />
                          <circle cx="221.036" cy="22.5" r="22.5" />
                          <path d="M60.942,232.619v32.922h54.092v-32.919c2.961,6.158,5.705,16.46,6.625,32.919h16.038   c-1.263-24.905-6.612-41.924-15.999-50.744c-5.604-5.264-11.077-6.176-13.896-6.245c-0.165-0.011-0.329-0.025-0.496-0.025H68.671   c-0.177,0-0.35,0.015-0.524,0.026c-2.827,0.074-8.285,0.996-13.869,6.243c-9.387,8.82-14.736,25.839-15.999,50.744h16.038   C55.236,249.079,57.981,238.777,60.942,232.619z" />
                          <circle cx="87.988" cy="180.329" r="22.5" />
                        </g>{" "}
                      </svg> */}
                      <div>
                        <p className="text-center">Number of Interns</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of Interns")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Number of New Interns")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <img src={InternsSvg} className="w-28 h-28 fill-[#eb944d]" />

                      <div>
                        <p className="text-center">Number of new Interns</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of New Interns")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {data
              .filter((e) => e.TYPE === "Total Partners")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[13rem] flex justify-around items-center ">
                      <img src={PartnerSvg} className="w-28 h-28 fill-[#eb944d]" color="#eb944d" />
                      <div>
                        <p className="text-center">Number of partners</p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Total Partners")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )}
            {/* {data
              .filter((e) => e.TYPE === "Number of New Members")
              .map(
                (e) =>
                  e.VALUE !== 0 && (
                    <Card className="h-[11rem] flex justify-around items-center ">
                      <FontAwesomeIcon icon={faIdCard} className="w-25 h-24 fill-[#eb944d]" color="#eb944d" style={{ height: "6em", width: "6em" }} />
                      {/* <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 64 80"
                        className="w-28 h-28 fill-[#eb944d]"
                        x="0px"
                        y="0px"
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        stroke-linejoin="round"
                        stroke-miterlimit="2"
                      >
                        <g transform="matrix(1,0,0,1,-210,-178)">
                          <g transform="matrix(1,0,0,1,210,178)">
                            <rect x="0" y="0" width="64" height="64" fill="none" />
                            <g transform="matrix(1,0,0,1,-210,-178)">
                              <path d="M273,193C273,191.674 272.473,190.402 271.536,189.464C270.598,188.527 269.326,188 268,188C257.091,188 226.909,188 216,188C214.674,188 213.402,188.527 212.464,189.464C211.527,190.402 211,191.674 211,193C211,201.02 211,218.98 211,227C211,228.326 211.527,229.598 212.464,230.536C213.402,231.473 214.674,232 216,232C226.909,232 257.091,232 268,232C269.326,232 270.598,231.473 271.536,230.536C272.473,229.598 273,228.326 273,227L273,193ZM271,193L271,227C271,227.796 270.684,228.559 270.121,229.121C269.559,229.684 268.796,230 268,230C257.091,230 226.909,230 216,230C215.204,230 214.441,229.684 213.879,229.121C213.316,228.559 213,227.796 213,227C213,218.98 213,201.02 213,193C213,192.204 213.316,191.441 213.879,190.879C214.441,190.316 215.204,190 216,190C226.909,190 257.091,190 268,190C268.796,190 269.559,190.316 270.121,190.879C270.684,191.441 271,192.204 271,193ZM236.522,212.163C236.15,210.882 234.975,210 233.641,210C231.022,210 225.651,210 223.033,210C221.698,210 220.524,210.882 220.152,212.163C219.636,213.939 218.751,216.987 218.119,219.163C217.856,220.07 218.034,221.047 218.601,221.801C219.168,222.556 220.056,223 221,223C224.828,223 231.845,223 235.673,223C236.617,223 237.506,222.556 238.072,221.801C238.639,221.047 238.817,220.07 238.554,219.163L236.522,212.163ZM234.601,212.721L236.634,219.721C236.721,220.023 236.662,220.349 236.473,220.6C236.284,220.852 235.988,221 235.673,221C231.845,221 224.828,221 221,221C220.685,221 220.389,220.852 220.2,220.6C220.011,220.349 219.952,220.023 220.04,219.721C220.672,217.545 221.557,214.497 222.072,212.721C222.196,212.294 222.588,212 223.033,212C225.651,212 231.022,212 233.641,212C234.086,212 234.477,212.294 234.601,212.721ZM244,217L262,217C262.552,217 263,216.552 263,216C263,215.448 262.552,215 262,215L244,215C243.448,215 243,215.448 243,216C243,216.552 243.448,217 244,217ZM244,211L265,211C265.552,211 266,210.552 266,210C266,209.448 265.552,209 265,209L244,209C243.448,209 243,209.448 243,210C243,210.552 243.448,211 244,211ZM228.337,197C225.025,197 222.337,199.689 222.337,203C222.337,206.311 225.025,209 228.337,209C231.648,209 234.337,206.311 234.337,203C234.337,199.689 231.648,197 228.337,197ZM228.337,199C230.544,199 232.337,200.792 232.337,203C232.337,205.208 230.544,207 228.337,207C226.129,207 224.337,205.208 224.337,203C224.337,200.792 226.129,199 228.337,199Z" />
                            </g>
                          </g>
                        </g>
                      </svg> 
                      <div>
                        <p className="text-center">Number of new Members </p>
                        <h3 className="font-bold text-2xl">
                          {data
                            .filter((e) => e.TYPE === "Number of New Members")
                            .map((e) => (
                              <p className="p_card">{e.VALUE}</p>
                            ))}
                        </h3>
                      </div>
                    </Card>
                  )
              )} */}
          </Grid>
        </main>
      </div>
    );
  },
});

export default Dashboard;
